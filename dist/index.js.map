{"version":3,"sources":["../src/index.js"],"names":["DATO_API_TOKEN","PORT","process","env","app","graphiql","set","path","join","__dirname","use","bodyParser","json","urlencoded","extended","src","dest","indentedSyntax","sourceMap","express","static","routes","req","res","next","err","Error","status","render","message","error","listen","console","log"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA,MAAM,EAAEA,cAAF,EAAkBC,OAAO,IAAzB,KAAkCC,QAAQC,GAAhD;AACA,MAAMC,MAAM,wBAAZ;;AAEA,MAAMC,WAAY,kDAAiDL,cAAe,EAAlF;;AAEAI,IAAIE,GAAJ,CAAQ,OAAR,EAAiBC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAjB;AACAL,IAAIE,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAF,IAAIM,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAN,IAAIM,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAR,IAAIM,GAAJ,CAAQC,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;;AAEAV,IAAIM,GAAJ,CACE,kCAAe;AACbK,OAAKR,eAAKC,IAAL,CAAUC,SAAV,EAAqB,gBAArB,CADQ;AAEbO,QAAMT,eAAKC,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAFO;AAGbQ,kBAAgB,KAHH,EAGU;AACvBC,aAAW;AAJE,CAAf,CADF;;AASAd,IAAIM,GAAJ,CAAQS,kBAAQC,MAAR,CAAeb,eAAKC,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR;;AAEA;AACAL,IAAIM,GAAJ,CAAQ,GAAR,EAAaW,gBAAb;;AAEA;AACAjB,IAAIM,GAAJ,CAAQ,CAACY,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC1B,QAAMC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAZ;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAH,OAAKC,GAAL;AACD,CAJD;;AAMA;AACArB,IAAIM,GAAJ,CAAQ,CAACe,GAAD,EAAMH,GAAN,EAAWC,GAAX,KAAmB;AACzBA,MAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB,EAA8BC,MAA9B,CAAqC,OAArC,EAA8C;AAC5CC,aAASJ,IAAII,OAD+B;AAE5CC,WAAOL;AAFqC,GAA9C;AAID,CALD;;AAOArB,IAAI2B,MAAJ,CAAW9B,IAAX,EAAiB,MAAM;AACrB+B,UAAQC,GAAR,CAAa,qBAAoBhC,IAAK,EAAtC;AACA+B,UAAQC,GAAR,CAAa,uBAAsB5B,QAAS,EAA5C;AACD,CAHD;;kBAKeD,G","file":"index.js","sourcesContent":["import express from \"express\";\nimport path from \"path\";\nimport logger from \"morgan\";\nimport bodyParser from \"body-parser\";\nimport routes from \"./routes\";\nimport sassMiddleware from \"node-sass-middleware\";\nconst { DATO_API_TOKEN, PORT = 3000 } = process.env;\nconst app = express();\n\nconst graphiql = `https://site-api.datocms.com/graphiql?apitoken=${DATO_API_TOKEN}`;\n\napp.set(\"views\", path.join(__dirname, \"../views\"));\napp.set(\"view engine\", \"ejs\");\napp.use(logger(\"dev\"));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n\napp.use(\n  sassMiddleware({\n    src: path.join(__dirname, \"../public/scss\"),\n    dest: path.join(__dirname, \"../public\"),\n    indentedSyntax: false, // true = .sass and false = .scss\n    sourceMap: false\n  })\n);\n\napp.use(express.static(path.join(__dirname, \"../public\")));\n\n// Routes\napp.use(\"/\", routes);\n\n// Catch 404 and forward to error handler\napp.use((req, res, next) => {\n  const err = new Error(\"Not Found\");\n  err.status = 404;\n  next(err);\n});\n\n// Error handler\napp.use((err, req, res) => {\n  res.status(err.status || 500).render(\"error\", {\n    message: err.message,\n    error: err\n  });\n});\n\napp.listen(PORT, () => {\n  console.log(`Listening on port ${PORT}`)\n  console.log(`Test your query at  ${graphiql}`)\n});\n\nexport default app;\n"]}